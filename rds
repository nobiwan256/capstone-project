AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS Infrastructure for WordPress'

Parameters:
  EnvironmentName:
    Type: String
    Default: WordPress

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for WordPress RDS
      SubnetIds:
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet1
        - Fn::ImportValue: !Sub ${EnvironmentName}-PrivateSubnet2

  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL access from EC2
      VpcId: 
        Fn::ImportValue: !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref EC2SecurityGroup

  ActiveDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: wordpress
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUsername: wordpress
      MasterUserPassword: wordpress123
      DBInstanceClass: db.t3.micro
      AllocatedStorage: '20'
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      MultiAZ: false
      BackupRetentionPeriod: 1
      DeletionProtection: false

  StandbyDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: wordpress
      Engine: mysql
      EngineVersion: 8.0.35
      MasterUsername: wordpress
      MasterUserPassword: wordpress123
      DBInstanceClass: db.t3.micro
      AllocatedStorage: '20'
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false
      MultiAZ: false
      BackupRetentionPeriod: 1
      DeletionProtection: false

Outputs:
  ActiveDBEndpoint:
    Description: Active RDS Endpoint
    Value: !GetAtt ActiveDB.Endpoint.Address
    Export:
      Name: !Sub ${EnvironmentName}-ActiveDBEndpoint

  StandbyDBEndpoint:
    Description: Standby RDS Endpoint
    Value: !GetAtt StandbyDB.Endpoint.Address
    Export:
      Name: !Sub ${EnvironmentName}-StandbyDBEndpoint

  DBSecurityGroup:
    Description: Database Security Group
    Value: !Ref DBSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-DBSecurityGroup
